#!/usr/bin/env perl

use strict;
use warnings;
use Mojolicious::Lite;
use Mojo::JSON qw(decode_json);
use Path::Tiny;
use Net::Statsite::Client;
use Net::Amazon::S3;

use Stor;

my $cfg = load_config();
my $statsite = Net::Statsite::Client->new(%{ $cfg->{statsite} });
my $s3 = Net::Amazon::S3->new(
    {
        aws_access_key_id     => $cfg->{hcp_credentials}{access_key},
        aws_secret_access_key => $cfg->{hcp_credentials}{secret_key},
        host                  => $cfg->{hcp_credentials}{host},
        secure                => 0,
        retry                 => 0,
        timeout               => 5
    }
);
my $bucket = $s3->bucket('samples');

my $stor = Stor->new(
    storage_pairs => $cfg->{storage_pairs},
    statsite      => $statsite,
    basic_auth    => $cfg->{basic_auth},
    bucket        => $bucket,
);

app->plugin(
    CHI => {
        default => {
            driver   => 'Memcached::Fast',
            servers  => $cfg->{memcached_servers},
            l1_cache => { driver => 'Memory', global => 1, max_size => 1024 * 1024 }
        }
    }
);

get  '/'       => sub { $stor->about(@_)  };
get  '/status' => sub { $stor->status(@_) };
get  '/:sha'   => sub { $stor->get(@_)    };
post '/:sha'   => sub { $stor->post(@_)   };

app->secrets([$cfg->{secret}]);
app->start;


sub load_config {
    die 'CONFIG_FILE environment variable not set'
        if !defined $ENV{CONFIG_FILE};

    return decode_json(path($ENV{CONFIG_FILE})->slurp())
}
